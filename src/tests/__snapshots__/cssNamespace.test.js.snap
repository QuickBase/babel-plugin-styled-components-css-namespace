// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`adds namespace to complex styled-component 1`] = `
"
const styled = { div() {} };

const MyStyledComponent = styled.div\`
  background-color: \${props => (props.isDark ? 'red' : 'yellow')};
  color: \${props => (props.isDark ? 'white' : 'navy')};
  font-size: 30px;
  padding: 20px;

  & {
    border: 1px solid black;
  }
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = { div() {} };

const MyStyledComponent = styled.div\`
&& {
  background-color: \${props => props.isDark ? 'red' : 'yellow'};
  color: \${props => props.isDark ? 'white' : 'navy'};
  font-size: 30px;
  padding: 20px;

  & {
    border: 1px solid black;
  }
}
\`;

export default MyStyledComponent;
"
`;

exports[`adds namespace to extended styled-components 1`] = `
"
const styled = () => {};
styled.div = () => {};

const styledDiv = styled.div\`
  width: 100px;
\`;

const MyStyledComponent = styled(styledDiv)\`
  background-color: 'yellow';
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = () => {};
styled.div = () => {};

const styledDiv = styled.div\`
&& {
  width: 100px;
}
\`;

const MyStyledComponent = styled(styledDiv)\`
&& {
  background-color: 'yellow';
}
\`;

export default MyStyledComponent;
"
`;

exports[`adds namespace to simple styled-component 1`] = `
"
const styled = { div() {} };

const MyStyledComponent = styled.div\`
  background-color: 'yellow';
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = { div() {} };

const MyStyledComponent = styled.div\`
&& {
  background-color: 'yellow';
}
\`;

export default MyStyledComponent;
"
`;

exports[`does not add extra selectors to child helper styles 1`] = `
"
const styled = { div() {} };
const css = { css() {} };

const styledCSS = css\`
  width: 100px;
\`;

const MyStyledComponent = styled.div\`
  background-color: 'yellow';
  \${styledCSS};
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = { div() {} };
const css = { css() {} };

const styledCSS = css\`
  width: 100px;
\`;

const MyStyledComponent = styled.div\`
&& {
  background-color: 'yellow';
  \${styledCSS};
}
\`;

export default MyStyledComponent;
"
`;

exports[`does not add namespace to keyframes 1`] = `
"
const styled = { div() {} };

const mymove = styled.keyframes\`
  0% {
    color: transparent;
  }
  100% {
    color: radboats;
  }
\`;

const MyStyledComponent = styled.div\`
  animation: \${mymove} 5s infinite;
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = { div() {} };

const mymove = styled.keyframes\`
  0% {
    color: transparent;
  }
  100% {
    color: radboats;
  }
\`;

const MyStyledComponent = styled.div\`
.specific & {
  animation: \${mymove} 5s infinite;
}
\`;

export default MyStyledComponent;
"
`;

exports[`uses a namespace specified in the options 1`] = `
"
const styled = { div() {} };

const MyStyledComponent = styled.div\`
  background-color: \${props => (props.isDark ? 'red' : 'yellow')};
  color: \${props => (props.isDark ? 'white' : 'navy')};
  font-size: 30px;
  padding: 20px;

  & {
    border: 1px solid black;
  }
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = { div() {} };

const MyStyledComponent = styled.div\`
.moreSpecific & {
  background-color: \${props => props.isDark ? 'red' : 'yellow'};
  color: \${props => props.isDark ? 'white' : 'navy'};
  font-size: 30px;
  padding: 20px;

  & {
    border: 1px solid black;
  }
}
\`;

export default MyStyledComponent;
"
`;

exports[`uses an array of namespaces specified in the options 1`] = `
"
const styled = { div() {} };

const MyStyledComponent = styled.div\`
  background-color: \${props => (props.isDark ? 'red' : 'yellow')};
  color: \${props => (props.isDark ? 'white' : 'navy')};
  font-size: 30px;
  padding: 20px;

  & {
    border: 1px solid black;
  }
\`;

export default MyStyledComponent;

      ↓ ↓ ↓ ↓ ↓ ↓

const styled = { div() {} };

const MyStyledComponent = styled.div\`
.specific .verySpecific .extraSpecific & {
  background-color: \${props => props.isDark ? 'red' : 'yellow'};
  color: \${props => props.isDark ? 'white' : 'navy'};
  font-size: 30px;
  padding: 20px;

  & {
    border: 1px solid black;
  }
}
\`;

export default MyStyledComponent;
"
`;
